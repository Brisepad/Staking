{"version":3,"sources":["containers/footer/Footer.jsx","assets/blog01.png","assets/blog02.png","assets/blog03.png","assets/blog04.png","assets/blog05.png","logo.svg","containers/header/Header.jsx","assets/ai.png","assets/possibility.png","components/wallet/icons/Metamask.jsx","components/wallet/config.js","components/wallet/icons/WalletConnect.jsx","utils/getRpcUrl.js","utils/web3React.js","utils/bigNumber.js","config/index.js","utils/wallet.js","hooks/useAuth.js","utils/truncateWalletAddress.js","hooks/useOutsideDetector.js","components/wallet/icons/Copy.jsx","components/wallet/icons/OpenNew.jsx","hooks/useWindowDimensions.js","components/wallet/AccountModal.jsx","components/wallet/WalletCard.jsx","components/wallet/WalletModal.jsx","components/navbar/Navbar.jsx","Pages/Home.js","config/constants/tokens.js","config/constants/pools.js","components/pools/Pool.jsx","config/constants/contracts.js","utils/addressHelpers.js","utils/web3.js","utils/multicall.js","state/pools/fetchPoolsUser.js","components/pools/Pools.jsx","Pages/ActivePools.js","utils/callHelpers.js","utils/settings.js","utils/formatBalance.js","utils/contractHelpers.js","hooks/useWeb3.js","hooks/useContract.js","components/pools/PoolDetail.jsx","hooks/useApprove.js","hooks/useStake.js","hooks/useHarvest.js","hooks/useUnstake.js","Pages/ShowPool.js","App.jsx","index.jsx"],"names":["Footer","id","style","padding","className","Header","to","Metamask","viewBox","cx","cy","r","fill","d","ConnectorNames","connectors","title","Icon","connectorId","connectorLocalStorageKey","nodes","process","getNodeUrl","randomIndex","random","length","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","BIG_ZERO","BigNumber","BIG_TEN","config","EXPONENTIAL_AT","DECIMAL_PLACES","BASE_BSC_SCAN_URL","DEFAULT_TOKEN_DECIMAL","pow","DEFAULT_GAS_LIMIT","setupNetwork","a","provider","window","ethereum","request","method","params","toString","chainName","nativeCurrency","name","symbol","decimals","rpcUrls","blockExplorerUrls","code","toast","error","console","useAuth","useWeb3React","activate","deactivate","login","useCallback","connectorID","connector","UnsupportedChainIdError","localStorage","removeItem","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","message","logout","getItem","close","truncateWalletAddress","address","startLength","endLength","substring","useOutsideDetector","ref","onOutsideClick","useEffect","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","Copy","width","OpenNew","getWindowDimensions","innerWidth","height","innerHeight","useWindowDimensions","useState","windowDimensions","setWindowDimensions","handleResize","AccountModal","account","onDismiss","isTooltipDisplayed","setIsTooltipDisplayed","windowWidth","wrapperRef","useRef","rel","href","onClick","content","el","createElement","value","body","appendChild","select","execCommand","removeChild","copyToClipboardWithCommand","setTimeout","WalletCard","walletConfig","setItem","WalletModal","map","entry","index","Navbar","active","library","toggleMenu","setToggleMenu","openWalletModal","setOpenWalletModal","closeToggleMenu","showWalletModal","closeWalletModal","connectWalletOnPageLoad","ex","log","marginBottom","src","alt","type","color","size","Home","tokens","bris","projectLink","bpad","wbrise","fswap","marsh","ktn","cos","PoolCategory","pools","sousId","stakingToken","earningToken","contractAddress","poolCategory","harvest","sortOrder","tokenPerBlock","Pool","pool","userData","contracts","masterChef","sousChef","multiCall","getAddress","getMulticallAddress","addresses","RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","web3NoAccount","getWeb3NoAccount","multicall","abi","calls","options","web3","multi","eth","Contract","MultiCallAbi","itf","Interface","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","undefined","blockNumber","returnData","res","i","decodeFunctionResult","Error","nonBnbPools","poolsConfig","filter","p","nonMasterPools","fetchPoolsAllowance","erc20ABI","allowances","reduce","acc","toJSON","fetchUserBalances","tokenBalancesRaw","tokenBalances","fetchUserStakeBalances","sousChefABI","userInfo","stakedBalances","amount","_hex","fetchUserPendingRewards","pendingRewards","Pools","setUserData","loadUserData","stakingTokenBalances","allowance","stakingTokenBalance","stakedBalance","pendingReward","intervalId","setInterval","clearInterval","data","ActivePools","approve","lpContract","masterChefContract","ethers","constants","MaxUint256","send","from","sousStake","sousChefContract","deposit","times","gas","on","tx","transactionHash","sousStakeBnb","sousUnstake","withdraw","sousEmergencyUnstake","emergencyWithdraw","soushHarvest","soushHarvestBnb","GAS_SETTINGS","getGasPriceInWei","amountInGwei","getDecimalAmount","getDefaultSettings","gasPrice","getStorageKey","getSettings","settingsFromLs","JSON","parse","getContract","_web3","useWeb3","refEth","setweb3","useSousChef","useMemo","find","sousChefBnb","getSouschefContract","useERC20","bep20Abi","getBep20Contract","PoolDetail","stakeAmt","setStakeAmt","unstakeAmt","setUnstakeAmt","approveLoading","setApproveLoading","stakeLoading","setStakenLoading","unstakeLoading","setUnstakenLoading","harvestLoading","setHarvestLoading","userdataLoading","setUserdataLoading","earningTokenSymbol","requestedApproval","setRequestedApproval","handleApprove","success","useSousApprove","handleTokenApproval","isUsingBnb","handleStake","onStake","useSousStake","Number","onReward","useSousHarvest","handleHarvest","enableEmergencyWithdraw","handleUnstake","txHash","info","onUnstake","useSousUnstake","disabled","onChange","e","isNaN","ShowPool","useParams","resPools","App","path","element","toastOptions","background","paddingRight","paddingLeft","fontWeight","fontSize","React","memo","ReactDOM","render","getLibrary","getElementById"],"mappings":"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","file":"static/js/main.554adff7.chunk.js","sourcesContent":["import React from 'react';\r\nimport gpt3Logo from '../../logo.svg';\r\nimport './footer.css';\r\n\r\nconst Footer = () => (\r\n  <div id=\"footer\" style={{padding: '5px'}} className=\"gpt3__footer section__padding fixed__bottom\">\r\n    {/* <div className=\"gpt3__footer-heading\">\r\n      <h1 className=\"gradient__text\">Do you want to step in to the future before others</h1>\r\n    </div>\r\n\r\n    <div className=\"gpt3__footer-btn\">\r\n      <p>Join our Waitlist</p>\r\n    </div> \r\n    */}\r\n\r\n    <div className=\"gpt3__footer-links\">\r\n      <div className=\"gpt3__footer-links_logo\">\r\n      <p>@2022 All rights reserved.  BrisePad</p>\r\n      </div>\r\n      {/* <div className=\"gpt3__footer-links_div\">\r\n        <p>Twitter</p>\r\n        <p>Github</p>\r\n        <p>Telegram</p>\r\n        <p>Discord</p>\r\n      </div> */}\r\n    \r\n    </div>\r\n\r\n    {/* <div className=\"gpt3__footer-copyright\">\r\n\r\n      <p>@2021 Mmasi. All rights reserved.</p>\r\n    </div> */}\r\n  </div>\r\n);\r\n\r\nexport default Footer;\r\n","export default __webpack_public_path__ + \"static/media/blog01.cefc0932.png\";","export default __webpack_public_path__ + \"static/media/blog02.ab0eb367.png\";","export default __webpack_public_path__ + \"static/media/blog03.d9223238.png\";","export default __webpack_public_path__ + \"static/media/blog04.742c1357.png\";","export default __webpack_public_path__ + \"static/media/blog05.bfaa1c1e.png\";","export default __webpack_public_path__ + \"static/media/logo.b568b296.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n// import people from '../../assets/people.png';\r\nimport ai from '../../assets/ai.png';\r\nimport './header.css';\r\n\r\nconst Header = () => (\r\n  <div className=\"gpt3__header section__padding\" id=\"home\">\r\n    <div className=\"gpt3__header-content\">\r\n      <div className='flex__header__content'>\r\n        <h1 className=\"gradient__text\">Earn passive income with BrisePad</h1>\r\n        <p>Brisepad is designed to help fuel the future of mass-market blockchain applications building on Bitgert chain We aim to be the largest decentralized launchpad on Bitgert Chain attracting solid projects and help them raise enough liquidity for their project development.</p>\r\n      </div>\r\n\r\n      <div className='header_button'>\r\n        <div className=\"gpt3__header-content__input\">\r\n          <Link className='goto_link' to='/activepools'>Goto Pools</Link>\r\n        </div>\r\n        {/* <div  className=\"gpt3__header-content__input\">\r\n          <button type=\"button\">Borrow</button>\r\n        </div> */}\r\n      </div>\r\n    \r\n\r\n      {/* <div className=\"gpt3__header-content__people\">\r\n        <img src={people} />\r\n        <p>1,600 people requested access a visit in last 24 hours</p>\r\n      </div> */}\r\n    </div>\r\n\r\n    <div className=\"gpt3__header-image\">\r\n    {/* <p className='gradient__text'>Brisepad is designed to help fuel the future of mass-market blockchain applications building on Bitgert chain We aim to be the largest decentralized launchpad on Bitgert Chain attracting solid projects and help them raise enough liquidity for their project development.</p> */}\r\n\r\n      {/* <img src={ai} /> */}\r\n      {/* <img src='images/briselogo/brise-vertical.png' alt='Brise'/> */}\r\n      {/* colour-brise.png */}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/ai.962b1c40.png\";","export default __webpack_public_path__ + \"static/media/possibility.525f13b6.png\";","import React from \"react\";\n\nconst Metamask = () => {\n  return (\n    <svg viewBox=\"0 0 96 96\">\n      <circle cx=\"48\" cy=\"48\" r=\"48\" fill=\"white\" />\n      <path d=\"M77.7602 16.9155L51.9419 36.0497L56.7382 24.7733L77.7602 16.9155Z\" fill=\"#E17726\" />\n      <path d=\"M18.2656 16.9155L43.8288 36.2283L39.2622 24.7733L18.2656 16.9155Z\" fill=\"#E27625\" />\n      <path d=\"M68.4736 61.2808L61.6108 71.7918L76.3059 75.8482L80.4899 61.5104L68.4736 61.2808Z\" fill=\"#E27625\" />\n      <path d=\"M15.5356 61.5104L19.6941 75.8482L34.3892 71.7918L27.5519 61.2808L15.5356 61.5104Z\" fill=\"#E27625\" />\n      <path d=\"M33.5984 43.5251L29.491 49.699L44.0584 50.3624L43.5482 34.6724L33.5984 43.5251Z\" fill=\"#E27625\" />\n      <path d=\"M62.4274 43.525L52.2991 34.4937L51.9419 50.3622L66.5094 49.6989L62.4274 43.525Z\" fill=\"#E27625\" />\n      <path d=\"M34.3892 71.7922L43.1654 67.5316L35.6137 61.6128L34.3892 71.7922Z\" fill=\"#E27625\" />\n      <path d=\"M52.8345 67.5316L61.6107 71.7922L60.3861 61.6128L52.8345 67.5316Z\" fill=\"#E27625\" />\n      <path d=\"M61.6107 71.7923L52.8345 67.5317L53.5233 73.2465L53.4468 75.6446L61.6107 71.7923Z\" fill=\"#D5BFB2\" />\n      <path d=\"M34.3892 71.7923L42.5531 75.6446L42.502 73.2465L43.1654 67.5317L34.3892 71.7923Z\" fill=\"#D5BFB2\" />\n      <path d=\"M42.7062 57.8369L35.4097 55.6939L40.5631 53.3213L42.7062 57.8369Z\" fill=\"#233447\" />\n      <path d=\"M53.2937 57.8369L55.4367 53.3213L60.6412 55.6939L53.2937 57.8369Z\" fill=\"#233447\" />\n      <path d=\"M34.3893 71.7918L35.6649 61.2808L27.552 61.5104L34.3893 71.7918Z\" fill=\"#CC6228\" />\n      <path d=\"M60.3352 61.2808L61.6108 71.7918L68.4736 61.5104L60.3352 61.2808Z\" fill=\"#CC6228\" />\n      <path\n        d=\"M66.5094 49.6987L51.9419 50.362L53.294 57.8371L55.4371 53.3215L60.6416 55.6941L66.5094 49.6987Z\"\n        fill=\"#CC6228\"\n      />\n      <path\n        d=\"M35.4098 55.6941L40.5633 53.3215L42.7063 57.8371L44.0584 50.362L29.491 49.6987L35.4098 55.6941Z\"\n        fill=\"#CC6228\"\n      />\n      <path d=\"M29.491 49.6987L35.6139 61.6129L35.4098 55.6941L29.491 49.6987Z\" fill=\"#E27525\" />\n      <path d=\"M60.6414 55.6941L60.3862 61.6129L66.5092 49.6987L60.6414 55.6941Z\" fill=\"#E27525\" />\n      <path d=\"M44.0584 50.3618L42.7063 57.8369L44.4156 66.6641L44.7728 55.0305L44.0584 50.3618Z\" fill=\"#E27525\" />\n      <path d=\"M51.9415 50.3618L51.2527 55.005L51.5843 66.6641L53.2937 57.8369L51.9415 50.3618Z\" fill=\"#E27525\" />\n      <path\n        d=\"M53.2938 57.8374L51.5845 66.6646L52.8346 67.532L60.3862 61.6132L60.6413 55.6943L53.2938 57.8374Z\"\n        fill=\"#F5841F\"\n      />\n      <path\n        d=\"M35.4097 55.6943L35.6138 61.6132L43.1654 67.532L44.4155 66.6646L42.7062 57.8374L35.4097 55.6943Z\"\n        fill=\"#F5841F\"\n      />\n      <path\n        d=\"M53.4468 75.6443L53.5233 73.2462L52.8855 72.6849H43.1143L42.502 73.2462L42.5531 75.6443L34.3892 71.792L37.2465 74.1391L43.0378 78.1445H52.962L58.7533 74.1391L61.6107 71.792L53.4468 75.6443Z\"\n        fill=\"#C0AC9D\"\n      />\n      <path\n        d=\"M52.8346 67.5315L51.5845 66.6641H44.4156L43.1655 67.5315L42.5022 73.2462L43.1145 72.6849H52.8857L53.5235 73.2462L52.8346 67.5315Z\"\n        fill=\"#161616\"\n      />\n      <path\n        d=\"M78.8314 37.2998L80.9999 26.7377L77.7599 16.9155L52.8345 35.4119L62.4271 43.5247L75.9485 47.4791L78.9335 43.984L77.6323 43.04L79.7243 41.1521L78.1426 39.902L80.2091 38.3458L78.8314 37.2998Z\"\n        fill=\"#763E1A\"\n      />\n      <path\n        d=\"M15 26.7377L17.194 37.2998L15.7909 38.3458L17.8574 39.902L16.2756 41.1521L18.3676 43.04L17.0665 43.984L20.0514 47.4791L33.5984 43.5247L43.1655 35.4119L18.2656 16.9155L15 26.7377Z\"\n        fill=\"#763E1A\"\n      />\n      <path\n        d=\"M75.9487 47.4793L62.4272 43.5249L66.5092 49.6989L60.3862 61.613L68.4736 61.511H80.4898L75.9487 47.4793Z\"\n        fill=\"#F5841F\"\n      />\n      <path\n        d=\"M33.5983 43.5249L20.0513 47.4793L15.5356 61.511H27.5519L35.6137 61.613L29.4908 49.6989L33.5983 43.5249Z\"\n        fill=\"#F5841F\"\n      />\n      <path\n        d=\"M51.9415 50.3617L52.8344 35.4115L56.7378 24.7729H39.262L43.1653 35.4115L44.0583 50.3617L44.3899 55.0559L44.4154 66.664H51.5843L51.6099 55.0559L51.9415 50.3617Z\"\n        fill=\"#F5841F\"\n      />\n    </svg>\n  );\n};\n\nexport default Metamask;\n","import Metamask from \"./icons/Metamask\";\r\nimport MathWallet from \"./icons/MathWallet\";\r\nimport TokenPocket from \"./icons/TokenPocket\";\r\nimport TrustWallet from \"./icons/TrustWallet\";\r\nimport WalletConnect from \"./icons/WalletConnect\";\r\nimport BinanceChain from \"./icons/BinanceChain\";\r\nimport SafePalWallet from \"./icons/SafePalWallet\";\r\n\r\nexport const ConnectorNames = {\r\n    Injected: \"injected\",\r\n    WalletConnect: \"walletconnect\",\r\n    BSC: \"bsc\",\r\n}\r\n  \r\n\r\nconst connectors = [\r\n  {\r\n    title: \"Metamask\",\r\n    Icon: Metamask,\r\n    connectorId: ConnectorNames.Injected,\r\n  },\r\n  // {\r\n  //   title: \"TrustWallet\",\r\n  //   Icon: TrustWallet,\r\n  //   connectorId: ConnectorNames.Injected,\r\n  // },\r\n  // {\r\n  //   title: \"MathWallet\",\r\n  //   Icon: MathWallet,\r\n  //   connectorId: ConnectorNames.Injected,\r\n  // },\r\n  // {\r\n  //   title: \"TokenPocket\",\r\n  //   Icon: TokenPocket,\r\n  //   connectorId: ConnectorNames.Injected,\r\n  // },\r\n  {\r\n    title: \"WalletConnect\",\r\n    Icon: WalletConnect,\r\n    connectorId: ConnectorNames.WalletConnect,\r\n  },\r\n  // {\r\n  //   title: \"Binance Chain Wallet\",\r\n  //   icon: \"BinanceChain\",\r\n  //   connectorId: ConnectorNames.BSC,\r\n  // },\r\n  // {\r\n  //   title: \"SafePal Wallet\",\r\n  //   Icon: SafePalWallet,\r\n  //   connectorId: ConnectorNames.Injected,\r\n  // },\r\n];\r\n\r\nexport default connectors;\r\n\r\nexport const connectorLocalStorageKey = \"brisepadconnectorId\";\r\n","import React from \"react\";\n\nconst WalletConnect = () => {\n  return (\n    <svg viewBox=\"0 0 96 96\">\n      <path\n        d=\"M96 48C96 21.4903 74.5097 0 48 0C21.4903 0 0 21.4903 0 48C0 74.5097 21.4903 96 48 96C74.5097 96 96 74.5097 96 48Z\"\n        fill=\"#3389FB\"\n      />\n      <path\n        d=\"M29.6927 35.4245C39.8036 25.5252 56.1965 25.5252 66.3074 35.4245L67.5242 36.6159C68.0298 37.1109 68.0298 37.9134 67.5242 38.4084L63.3616 42.4839C63.1088 42.7314 62.699 42.7314 62.4462 42.4839L60.7717 40.8444C53.7181 33.9384 42.282 33.9384 35.2284 40.8444L33.4351 42.6002C33.1823 42.8477 32.7725 42.8477 32.5197 42.6002L28.3571 38.5247C27.8515 38.0297 27.8515 37.2272 28.3571 36.7322L29.6927 35.4245ZM74.9161 43.8532L78.6208 47.4805C79.1264 47.9755 79.1264 48.778 78.6208 49.2729L61.9159 65.6288C61.4103 66.1237 60.5907 66.1237 60.0851 65.6288C60.0851 65.6288 60.0851 65.6288 60.0851 65.6288L48.229 54.0206C48.1026 53.8968 47.8977 53.8968 47.7713 54.0206C47.7713 54.0206 47.7713 54.0206 47.7713 54.0206L35.9153 65.6288C35.4098 66.1237 34.5902 66.1237 34.0846 65.6288C34.0846 65.6288 34.0846 65.6288 34.0846 65.6288L17.3792 49.2727C16.8736 48.7778 16.8736 47.9753 17.3792 47.4803L21.0839 43.853C21.5895 43.3581 22.4091 43.3581 22.9146 43.853L34.771 55.4614C34.8974 55.5851 35.1023 55.5851 35.2287 55.4614C35.2287 55.4614 35.2287 55.4614 35.2287 55.4614L47.0844 43.853C47.59 43.358 48.4096 43.358 48.9152 43.853C48.9152 43.853 48.9152 43.853 48.9152 43.853L60.7715 55.4614C60.8979 55.5851 61.1028 55.5851 61.2292 55.4614L73.0854 43.8532C73.5909 43.3583 74.4105 43.3583 74.9161 43.8532Z\"\n        fill=\"white\"\n      />\n    </svg>\n  );\n};\n\nexport default WalletConnect;\n","import random from 'lodash/random'\r\n\r\n// Array of available nodes to connect to\r\nexport const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\r\n\r\nconst getNodeUrl = () => {\r\n  const randomIndex = random(0, nodes.length - 1)\r\n  return nodes[randomIndex]\r\n}\r\n\r\nexport default getNodeUrl\r\n","import { InjectedConnector } from '@web3-react/injected-connector';\r\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector';\r\nimport { BscConnector } from '@binance-chain/bsc-connector';\r\nimport Web3 from 'web3';\r\nimport { ConnectorNames } from '../components/wallet/config';\r\nimport getNodeUrl from './getRpcUrl';\r\n\r\n\r\nconst POLLING_INTERVAL = 12000;\r\nconst rpcUrl = getNodeUrl();\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10);\r\n\r\nexport const injected = new InjectedConnector({ supportedChainIds: [chainId] });\r\n\r\nconst walletconnect = new WalletConnectConnector({\r\n    rpc: { [chainId]: rpcUrl },\r\n    // bridge: 'https://pancakeswap.bridge.walletconnect.org/',\r\n    qrcode: true,\r\n    pollingInterval: POLLING_INTERVAL,\r\n})\r\n  \r\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\r\n\r\nexport const connectorsByName = {\r\n    [ConnectorNames.Injected]: injected,\r\n    [ConnectorNames.WalletConnect]: walletconnect,\r\n    [ConnectorNames.BSC]: bscConnector,\r\n}\r\n  \r\nexport const getLibrary = (provider) => {\r\n    return new Web3(provider);\r\n}\r\n  ","import BigNumber from 'bignumber.js'\r\n\r\nexport const BIG_ZERO = new BigNumber(0)\r\nexport const BIG_ONE = new BigNumber(1)\r\nexport const BIG_NINE = new BigNumber(9)\r\nexport const BIG_TEN = new BigNumber(10)\r\n","import BigNumber from 'bignumber.js/bignumber'\r\nimport { BIG_TEN } from '../utils/bigNumber'\r\n\r\nBigNumber.config({\r\n  EXPONENTIAL_AT: 1000,\r\n  DECIMAL_PLACES: 80,\r\n})\r\n\r\n\r\nexport const BSC_BLOCK_TIME = 3\r\n\r\n// CAKE_PER_BLOCK details\r\n// 40 BRIS is minted per block\r\n// 20 BRIS per block is sent to Burn pool (A farm just for burning cake)\r\n// 10 BRIS per block goes to BRIS syrup pool\r\n// 10 BRIS per block goes to Yield farms and lottery\r\n// BRIS_PER_BLOCK in config/index.ts = 40 as we only change the amount sent to the burn pool which is effectively a farm.\r\n// BRIS/Block in src/views/Home/components/CakeStats.tsx = 20 (40 - Amount sent to burn pool)\r\n\r\nexport const BLOCKS_PER_YEAR = new BigNumber((60 / BSC_BLOCK_TIME) * 60 * 24 * 365); // 10512000\r\nexport const BASE_BSC_SCAN_URL = 'https://brisescan.com';\r\nexport const DEFAULT_TOKEN_DECIMAL = BIG_TEN.pow(18);\r\nexport const DEFAULT_GAS_LIMIT = 200000;\r\nexport const DEFAULT_GAS_PRICE = 5;\r\nexport const TESTNET_CHAIN_ID = '97';\r\nexport const MAINNET_CHAIN_ID = '32520';\r\n","// Set of helper functions to facilitate wallet setup\r\nimport toast from \"react-hot-toast\";\r\nimport { BASE_BSC_SCAN_URL } from '../config';\r\nimport { nodes } from './getRpcUrl';\r\n\r\n/**\r\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\r\n * @returns {boolean} true if the setup succeeded, false otherwise\r\n */\r\nexport const setupNetwork = async () => {\r\n  const provider = window.ethereum\r\n  if (provider) {\r\n    const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n    try {\r\n      await provider.request({\r\n        method: 'wallet_addEthereumChain',\r\n        params: [\r\n          {\r\n            chainId: `0x${chainId.toString(16)}`,\r\n            chainName: 'Bris Chain Mainnet',\r\n            nativeCurrency: {\r\n              name: 'BRISE',\r\n              symbol: 'brise',\r\n              decimals: 18,\r\n            },\r\n            rpcUrls: nodes,\r\n            blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\r\n          },\r\n        ],\r\n      })\r\n      return true\r\n    } catch (error) {\r\n      if(error.code === -32002){\r\n        (() => toast.error(\"Check your metamask for pending authorization\"))();\r\n      }\r\n      console.error(error)\r\n      return false\r\n    }\r\n  } else {\r\n    console.error(\"Can't setup the Brise network on metamask because window.ethereum is undefined\")\r\n    return false\r\n  }\r\n}\r\n\r\n/**\r\n * Prompt the user to add a custom token to metamask\r\n * @param tokenAddress\r\n * @param tokenSymbol\r\n * @param tokenDecimals\r\n * @param tokenImage\r\n * @returns {boolean} true if the token has been added, false otherwise\r\n */\r\nexport const registerToken = async (\r\n  tokenAddress,\r\n  tokenSymbol,\r\n  tokenDecimals,\r\n  tokenImage,\r\n) => {\r\n  const tokenAdded = await window.ethereum.request({\r\n    method: 'wallet_watchAsset',\r\n    params: {\r\n      type: 'ERC20',\r\n      options: {\r\n        address: tokenAddress,\r\n        symbol: tokenSymbol,\r\n        decimals: tokenDecimals,\r\n        image: tokenImage,\r\n      },\r\n    },\r\n  })\r\n\r\n  return tokenAdded\r\n}\r\n","import { useCallback } from 'react';\r\nimport { useWeb3React, UnsupportedChainIdError } from '@web3-react/core';\r\nimport { NoBscProviderError } from '@binance-chain/bsc-connector';\r\nimport {\r\n  NoEthereumProviderError,\r\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\r\n} from '@web3-react/injected-connector';\r\nimport {\r\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\r\n  WalletConnectConnector,\r\n} from '@web3-react/walletconnect-connector';\r\nimport toast from \"react-hot-toast\";\r\nimport { connectorsByName } from '../utils/web3React';\r\nimport { connectorLocalStorageKey } from '../components/wallet/config';\r\nimport { setupNetwork } from '../utils/wallet';\r\n\r\nconst useAuth = () => {\r\n  const { activate, deactivate } = useWeb3React();\r\n\r\n  const login = useCallback(\r\n\r\n    (connectorID) => {\r\n        const connector = connectorsByName[connectorID];\r\n        if(connector) {\r\n            activate(connector, async(error) => {\r\n                if (error instanceof UnsupportedChainIdError) {\r\n                    const hasSetup = await setupNetwork();\r\n                    if (hasSetup) {\r\n                        activate(connector);\r\n                    }\r\n                } else {\r\n                    window.localStorage.removeItem(connectorLocalStorageKey)\r\n                    if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\r\n                      (() => toast.error(\"No provider was found\"))();\r\n                        \r\n                      // toastError('Provider Error', 'No provider was found')\r\n                    } else if (\r\n                        error instanceof UserRejectedRequestErrorInjected ||\r\n                        error instanceof UserRejectedRequestErrorWalletConnect\r\n                    ) {\r\n                        if (connector instanceof WalletConnectConnector) {\r\n                          const walletConnector = connector;\r\n                          walletConnector.walletConnectProvider = null\r\n                          }\r\n                          (() => toast.error(\"Please authorize to access your account\"))();\r\n                          \r\n                          // toastError('Authorization Error', 'Please authorize to access your account')\r\n                        \r\n                      } else {\r\n                        (() => toast.error(error.message))();\r\n                        // toastError(error.name, error.message)\r\n                      }\r\n                    }\r\n                  });\r\n                }else {\r\n                  (() => toast.error(\"The connector config is wrong\"))();\r\n                  // toastError('Unable to find connector', 'The connector config is wrong')\r\n                }\r\n\r\n\r\n    }, [activate]\r\n  );\r\n\r\n  const logout = useCallback(() => {\r\n    // dispatch(profileClear())\r\n    deactivate()\r\n    // This localStorage key is set by @web3-react/walletconnect-connector\r\n    if (window.localStorage.getItem('walletconnect')) {\r\n      connectorsByName.walletconnect.close();\r\n      connectorsByName.walletconnect.walletConnectProvider = null;\r\n    }\r\n  }, [deactivate]);\r\n\r\n  return { login, logout };\r\n\r\n}\r\n\r\nexport default useAuth;","/**\r\n * Truncates a wallet's address\r\n */\r\n const truncateWalletAddress = (address, startLength = 4, endLength = 4) => {\r\n    return `${address.substring(0, startLength)}...${address.substring(address.length - endLength)}`\r\n  }\r\n  \r\n  export default truncateWalletAddress\r\n  ","import React, { useEffect } from \"react\";\r\n\r\n/**\r\n * Hook that alerts clicks outside of the passed ref\r\n */\r\nfunction useOutsideDetector(ref, onOutsideClick) {\r\n  useEffect(() => {\r\n    /**\r\n     * Alert if clicked on outside of element\r\n     */\r\n    function handleClickOutside(event) {\r\n      if (ref.current && !ref.current.contains(event.target)) {\r\n        onOutsideClick();\r\n      }\r\n    }\r\n    // Bind the event listener\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n    return () => {\r\n      // Unbind the event listener on clean up\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, [ref]);\r\n}\r\n\r\n\r\nexport default useOutsideDetector;","import React from \"react\";\r\n\r\nconst Copy = () => {\r\n  return (\r\n    <svg width={20} fill=\"#ffffff\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M15 1H4C2.9 1 2 1.9 2 3V16C2 16.55 2.45 17 3 17C3.55 17 4 16.55 4 16V4C4 3.45 4.45 3 5 3H15C15.55 3 16 2.55 16 2C16 1.45 15.55 1 15 1ZM19 5H8C6.9 5 6 5.9 6 7V21C6 22.1 6.9 23 8 23H19C20.1 23 21 22.1 21 21V7C21 5.9 20.1 5 19 5ZM18 21H9C8.45 21 8 20.55 8 20V8C8 7.45 8.45 7 9 7H18C18.55 7 19 7.45 19 8V20C19 20.55 18.55 21 18 21Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default Copy;\r\n","import React from \"react\";\r\n\r\nconst OpenNew = () => {\r\n  return (\r\n    <svg width={25} fill=\"#ffffff\" viewBox=\"0 0 24 24\">\r\n      <path d=\"M18 19H6C5.45 19 5 18.55 5 18V6C5 5.45 5.45 5 6 5H11C11.55 5 12 4.55 12 4C12 3.45 11.55 3 11 3H5C3.89 3 3 3.9 3 5V19C3 20.1 3.9 21 5 21H19C20.1 21 21 20.1 21 19V13C21 12.45 20.55 12 20 12C19.45 12 19 12.45 19 13V18C19 18.55 18.55 19 18 19ZM14 4C14 4.55 14.45 5 15 5H17.59L8.46 14.13C8.07 14.52 8.07 15.15 8.46 15.54C8.85 15.93 9.48 15.93 9.87 15.54L19 6.41V9C19 9.55 19.45 10 20 10C20.55 10 21 9.55 21 9V4C21 3.45 20.55 3 20 3H15C14.45 3 14 3.45 14 4Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport default OpenNew;\r\n","import { useState, useEffect } from 'react';\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height\r\n  };\r\n}\r\n\r\nexport default function useWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React, { useRef, useState } from 'react';\r\nimport './styles/accountmodal.css';\r\nimport { connectorLocalStorageKey } from './config';\r\nimport useOutsideDetector from '../../hooks/useOutsideDetector';\r\nimport Copy from './icons/Copy';\r\nimport OpenNew from './icons/OpenNew';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\nimport truncateWalletAddress from '../../utils/truncateWalletAddress';\r\nimport { BASE_BSC_SCAN_URL } from '../../config';\r\n\r\n\r\nconst AccountModal = ({ account, logout, onDismiss = () => {} }) => {\r\n\r\n    const [isTooltipDisplayed, setIsTooltipDisplayed] = useState();\r\n    const { width: windowWidth } = useWindowDimensions();\r\n    const wrapperRef = useRef(null);\r\n    useOutsideDetector(wrapperRef, onDismiss);\r\n\r\n    \r\n    const copyToClipboardWithCommand = (content) => {\r\n        const el = document.createElement(\"textarea\");\r\n        el.value = content;\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand(\"copy\");\r\n        document.body.removeChild(el);\r\n    };\r\n\r\n    function displayTooltip() {\r\n        setIsTooltipDisplayed(true);\r\n        setTimeout(() => {\r\n            setIsTooltipDisplayed(false);\r\n        }, 1000);\r\n    }\r\n\r\n    const handleCopy = () => {\r\n        copyToClipboardWithCommand(account);\r\n        displayTooltip();\r\n    }\r\n    // truncateWalletAddress\r\n    return(\r\n        <div className='account_modal_container'>\r\n            <div ref={wrapperRef} className='account_modal_content'>\r\n                <p className='active_account'>{windowWidth < 473 ? truncateWalletAddress(account) : account}</p>\r\n                \r\n                <div className='account_modal_links'>\r\n                    <a target='_blank' rel='noreferrer noopener' className='view_btn' href={`${BASE_BSC_SCAN_URL}/address/${account}`}>\r\n                        Brisescan\r\n                        <OpenNew />\r\n                    </a>\r\n                    <button onClick={handleCopy} className='copy_btn'>\r\n                        Copy\r\n                        <Copy />\r\n                    </button>\r\n                    <button\r\n                        className='logout_btn'\r\n                        onClick={() => {\r\n                            logout();\r\n                            window.localStorage.removeItem(connectorLocalStorageKey);\r\n                            onDismiss();\r\n                        }}\r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </div>\r\n                {\r\n                    isTooltipDisplayed \r\n                    &&\r\n                    <div className='tooltip'>\r\n                        Copied!\r\n                    </div>\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AccountModal;","import React, { useState } from 'react';\r\nimport { connectorLocalStorageKey } from './config';\r\n\r\nimport './styles/walletcard.css';\r\n\r\nconst WalletCard = ({login, walletConfig, onDismiss }) => {\r\n    const { title, Icon } = walletConfig;\r\n\r\n    return (\r\n        <button\r\n            className='wallet_card_wrapper'\r\n            onClick={() => {\r\n                login(walletConfig.connectorId);\r\n                window.localStorage.setItem(connectorLocalStorageKey, walletConfig.connectorId);\r\n                onDismiss();\r\n            }}\r\n        >\r\n            {title}\r\n            <div className='wallet_card_icon'>\r\n                <Icon/>\r\n            </div>\r\n\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default WalletCard;","import React, { useRef } from 'react';\r\nimport connectors from './config';\r\nimport WalletCard from './WalletCard';\r\nimport './styles/walletmodal.css';\r\nimport useOutsideDetector from '../../hooks/useOutsideDetector';\r\n\r\n\r\nconst WalletModal = ({ login, onDismiss = () => null, logout }) => {\r\n\r\n    // useOutsideDetector\r\n    const wrapperRef = useRef(null);\r\n    useOutsideDetector(wrapperRef, onDismiss);\r\n    return(\r\n        <div className='wallet_modal_container'>\r\n            {/* <button className='modal_closebtn' onClick={onDismiss}>X</button> */}\r\n            <div ref={wrapperRef} className='wallet_modal_wallets'>\r\n                {\r\n                    connectors.map((entry, index) => (\r\n                        <WalletCard\r\n                            key={entry.title}\r\n                            login={login}\r\n                            walletConfig={entry}\r\n                            onDismiss={onDismiss}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WalletModal;","import React, { useState, useEffect } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { RiMenu3Line, RiCloseLine } from 'react-icons/ri';\r\nimport { Link } from 'react-router-dom';\r\nimport useAuth from '../../hooks/useAuth';\r\nimport logo from '../../logo.svg';\r\nimport truncateWalletAddress from '../../utils/truncateWalletAddress';\r\nimport AccountModal from '../wallet/AccountModal';\r\nimport { connectorLocalStorageKey } from '../wallet/config';\r\nimport WalletModal from '../wallet/WalletModal';\r\nimport './navbar.css';\r\n\r\nconst Navbar = () => {\r\n  const { login, logout } = useAuth();\r\n  const { active, account, library, connector, activate, deactivate } = useWeb3React()\r\n\r\n\r\n  const [toggleMenu, setToggleMenu] = useState(false);\r\n  const [openWalletModal, setOpenWalletModal] = useState(false);\r\n\r\n  const showToggleMenu = () => {\r\n    setToggleMenu(true);\r\n    setOpenWalletModal(false);\r\n  };\r\n\r\n  const closeToggleMenu = () => {\r\n    setToggleMenu(false);\r\n  };\r\n\r\n  const showWalletModal = () => {\r\n    setOpenWalletModal(true);\r\n    setToggleMenu(false);\r\n  };\r\n\r\n  const closeWalletModal = () => {\r\n    setOpenWalletModal(false);\r\n  };\r\n\r\n  const accountLogout = () => {\r\n    logout();\r\n    closeWalletModal();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const connectWalletOnPageLoad = async () => {\r\n      const connectorId = localStorage?.getItem(connectorLocalStorageKey);\r\n      if (connectorId) {\r\n        try {\r\n          login(connectorId);\r\n          // localStorage.setItem('isWalletConnected', true)\r\n        } catch (ex) {\r\n          console.log(ex)\r\n        }\r\n      }\r\n    }\r\n    connectWalletOnPageLoad();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=\"gpt3__navbar\">\r\n      <div className=\"gpt3__navbar-links\">\r\n        <div className=\"gpt3__navbar-links_logo\">\r\n          <img style={{ marginBottom: -5 }} src='/images/briselogo/brise-vertical.png' alt=\"BrisePad\" />\r\n          {/* <img style={{ marginBottom: -5 }} src={logo} alt=\"PoolApp\" /> */}\r\n          {/* <h2 style={{color: '#ffffff'}}>BrisePad</h2> */}\r\n        </div>\r\n        <div className=\"gpt3__navbar-links_container\">\r\n          <p><Link to=\"/\">Home</Link></p>\r\n          <p><Link to=\"/activepools\">Pools</Link></p>\r\n          \r\n        </div>\r\n      </div>\r\n      <div className=\"gpt3__navbar-sign\">\r\n        {/* <p>Get Loan</p> */}\r\n        <button onClick={showWalletModal} type=\"button\">{active ? truncateWalletAddress(account): \"Connect\"}</button>\r\n      </div>\r\n      <div className=\"gpt3__navbar-menu\">\r\n        {toggleMenu\r\n          ? <RiCloseLine color=\"#fff\" size={27} onClick={closeToggleMenu} />\r\n          : <RiMenu3Line color=\"#fff\" size={27} onClick={showToggleMenu} />}\r\n        {toggleMenu && (\r\n        <div className=\"gpt3__navbar-menu_container scale-up-center\">\r\n          <div className=\"gpt3__navbar-menu_container-links\">\r\n          <p><Link onClick={closeToggleMenu} to=\"/\">Home</Link></p>\r\n          <p><Link onClick={closeToggleMenu} to=\"/activepools\">Pools</Link></p>\r\n          </div>\r\n          <div className=\"gpt3__navbar-menu_container-links-sign\">\r\n            {/* <p>Launch Loan App</p> */}\r\n            <button onClick={showWalletModal} type=\"button\">{active ? truncateWalletAddress(account): \"Connect\"}</button>\r\n          </div>\r\n        </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    {\r\n      openWalletModal && ( \r\n        active ?\r\n        <AccountModal account={account} logout={accountLogout} onDismiss={closeWalletModal} />\r\n        :\r\n        <WalletModal login={login} logout={logout} onDismiss={closeWalletModal} />\r\n      )\r\n    }\r\n    </>\r\n\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\n\r\nimport { Footer, Header } from '../containers';\r\nimport {  Navbar } from '../components';\r\n\r\n\r\nimport '../App.css';\r\n\r\nconst Home = () => (\r\n  <div className=\"App\">\r\n    <div className=\"gradient__bg\">\r\n      <Header />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default Home;\r\n","const tokens = {\r\n    // bnb: {\r\n    //   symbol: 'BNB',\r\n    //   projectLink: 'https://www.binance.com/',\r\n    // },\r\n    bris: {\r\n      symbol: 'BRIS',\r\n      address: {\r\n        56: '0x88C945170267BA9b7959E3f07706846890F79924',\r\n        97: '',\r\n        32520: ''\r\n      },\r\n      decimals: 18,\r\n      projectLink: 'https://bridgeswap.app/',\r\n    },\r\n    // staking 0x71946a5C9dA7C95ee804a9BE561EC15A3F286A7D\r\n    // earn 0x0eb9036cbE0f052386f36170c6b07eF0a0E3f710\r\n    bpad: {\r\n      symbol: 'BPAD',\r\n      address: {\r\n        56: '',\r\n        97: '',\r\n        32520: '0x71946a5C9dA7C95ee804a9BE561EC15A3F286A7D'\r\n      },\r\n      decimals: 8,\r\n      projectLink: 'https://brisepad.co/',\r\n    },\r\n    wbrise: {\r\n      symbol: 'WBRISE',\r\n      address: {\r\n        56: '',\r\n        97: '',\r\n        32520: '0x0eb9036cbE0f052386f36170c6b07eF0a0E3f710'\r\n      },\r\n      decimals: 8,\r\n      projectLink: 'https://brisepad.com/',\r\n    },\r\n    fswap: {\r\n      symbol: 'FSWAP',\r\n      address: {\r\n        56: '0x078D1b73bbc94C83bA2371A164761A35a66b8612',\r\n        97: '',\r\n        32520: ''\r\n      },\r\n      decimals: 18,\r\n      projectLink: 'https://flutterswap.finance/',\r\n    },\r\n    marsh: {\r\n      symbol: 'MARSH',\r\n      address: {\r\n        56: '0x2FA5dAF6Fe0708fBD63b1A7D1592577284f52256',\r\n        97: '',\r\n        32520: ''\r\n      },\r\n      decimals: 18,\r\n      projectLink: 'https://unmarshal.io/',\r\n    },\r\n    ktn: {\r\n      symbol: 'KTN',\r\n      address: {\r\n        56: '0xdae6c2a48bfaa66b43815c5548b10800919c993e',\r\n        97: '',\r\n        32520: ''\r\n      },\r\n      decimals: 18,\r\n      projectLink: 'https://kattana.io/',\r\n    },\r\n    cos: {\r\n      symbol: 'COS',\r\n      address: {\r\n        56: '0x96Dd399F9c3AFda1F194182F71600F1B65946501',\r\n        97: '',\r\n        32520: ''\r\n      },\r\n      decimals: 18,\r\n      projectLink: 'https://www.contentos.io/',\r\n    },\r\n  }\r\n  \r\n  export default tokens;\r\n  ","import tokens from './tokens';\r\n\r\nexport const PoolCategory = {\r\n    CORE: 'Core',\r\n    COMMUNITY: 'Community',\r\n    BINANCE: 'Binance',\r\n    AUTO: 'Auto'\r\n};\r\n\r\nconst pools = [\r\n  // {\r\n  //   sousId: 0,\r\n  //   stakingToken: tokens.bris,\r\n  //   earningToken: tokens.bris,\r\n  //   contractAddress: {\r\n  //     97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n  //     56: '0xbe69572b574165658251e19469Ec47AF26AC508F',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   harvest: true,\r\n  //   tokenPerBlock: '10',\r\n  //   sortOrder: 1,\r\n  //   isFinished: false,\r\n  // },\r\n  // {\r\n  //   sousId: 3,\r\n  //   stakingToken: tokens.cake,\r\n  //   earningToken: tokens.oddz,\r\n  //   contractAddress: {\r\n  //     97: '',\r\n  //     56: '0x44d1f81e80e43e935d66d65874354ef91e5e49f6',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   harvest: true,\r\n  //   sortOrder: 999,\r\n  //   tokenPerBlock: '0.4843',\r\n  // },\r\n  {\r\n    sousId: 3,\r\n    stakingToken: tokens.bpad,\r\n    earningToken: tokens.wbrise,\r\n    contractAddress: {\r\n      97: '',\r\n      56: '',\r\n      32520: '0x294037a277FF365500efFD7a5f84d119F88C408a'\r\n    },\r\n    poolCategory: PoolCategory.CORE,\r\n    harvest: true,\r\n    sortOrder: 999,\r\n    tokenPerBlock: '0.4843',\r\n  },\r\n  // {\r\n  //   sousId: 4,\r\n  //   stakingToken: tokens.cos,\r\n  //   earningToken: tokens.ktn,\r\n  //   contractAddress: {\r\n  //     97: '',\r\n  //     56: '0x48852322a185dc5fc733ff8c8d7c6dcbd2b3b2a2',\r\n  //   },\r\n  //   poolCategory: PoolCategory.CORE,\r\n  //   harvest: true,\r\n  //   sortOrder: 999,\r\n  //   tokenPerBlock: '0.01215',\r\n  // },\r\n\r\n]\r\n\r\nexport default pools\r\n","import { Link } from \"react-router-dom\";\r\nimport \"./styles/pool.css\";\r\n\r\nconst Pool = ({ pool, userData }) => {\r\n\r\n    // console.log('pool userData: ', userData[0]);\r\n\r\n    return (\r\n        <div className='pool_container'>\r\n            {/* <h4>Pool Sous ID {pool.sousId}</h4> */}\r\n            <div className='brise_img_container'>\r\n                <img className='brise_img' src={`images/briselogo/brise.png`} alt='brise' />\r\n            </div>\r\n            <p className='stake_text'>Stake {pool.stakingToken.symbol}</p>\r\n            <p className='earn_text'>Earn {pool.earningToken.symbol}</p>\r\n\r\n            <Link className='pool_select_btn' to={`/pool/${pool.sousId}`}>Select</Link>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Pool;","const contracts = {\r\n    masterChef: {\r\n        97: '0x1d32c2945C8FDCBc7156c553B7cEa4325a17f4f9',\r\n        56: '0x3ae4688Cfe3c1B6746b8DF1e90c942c073B2D08E',\r\n        32520: ''\r\n    },\r\n    sousChef: {\r\n        97: '0xd3af5fe61dbaf8f73149bfcfa9fb653ff096029a',\r\n        56: '0x6ab8463a4185b80905e05a9ff80a2d6b714b9e95',\r\n        32520: ''\r\n    },\r\n    multiCall: {\r\n        56: '0xfF6FD90A470Aaa0c1B8A54681746b07AcdFedc9B',\r\n        97: '',\r\n        32520: '0x9bCa299b827E6eFc6f558e37C2f2C6856CbA2C43'\r\n    },\r\n    \r\n    \r\n}\r\n\r\nexport default contracts;\r\n  ","import { MAINNET_CHAIN_ID } from '../config';\r\nimport addresses from '../config/constants/contracts';\r\n\r\nexport const getAddress = (address) => {\r\n    const chainId = process.env.REACT_APP_CHAIN_ID;\r\n    return address[chainId] ? address[chainId] : address[MAINNET_CHAIN_ID];\r\n}\r\n\r\nexport const getMulticallAddress = () => {\r\n    return getAddress(addresses.multiCall)\r\n}","import Web3 from 'web3';\r\nimport { ARCHIVED_NODE } from '../config/constants/endpoints';\r\nimport getRpcUrl from '../utils/getRpcUrl';\r\n\r\nconst RPC_URL = getRpcUrl()\r\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 });\r\nconst web3NoAccount = new Web3(httpProvider)\r\n\r\nconst getWeb3NoAccount = () => {\r\n    return web3NoAccount\r\n};\r\n\r\nconst getWeb3WithArchivedNodeProvider = () => {\r\n    const archivedHttpProvider = new Web3.providers.HttpProvider(ARCHIVED_NODE, { timeout: 10000 })\r\n    return new Web3(archivedHttpProvider)\r\n}\r\n\r\nexport { getWeb3NoAccount, getWeb3WithArchivedNodeProvider }\r\nexport default web3NoAccount","import { getWeb3NoAccount } from './web3';\r\nimport { Interface } from '@ethersproject/abi';\r\nimport MultiCallAbi from '../config/abi/Multicall.json';\r\nimport { getMulticallAddress } from './addressHelpers';\r\n\r\n\r\nconst multicall = async (abi, calls, options = {}) => {\r\n    try {\r\n        const web3 = options.web3 || getWeb3NoAccount()\r\n        console.log('multicall web3: ', web3);\r\n        const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\r\n        const itf = new Interface(abi)\r\n\r\n        const calldata = calls.map((call) => [call.address.toLowerCase(), itf.encodeFunctionData(call.name, call.params)])\r\n        console.log('multicall calldata: ', calldata);\r\n        const { returnData } = await multi.methods.aggregate(calldata).call(undefined, options.blockNumber)\r\n        const res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i].name, call))\r\n        return res\r\n    } catch (error) {\r\n        console.error(error);\r\n        throw new Error(error);\r\n        // throw new Error(\"Error\");\r\n        \r\n    }\r\n}\r\n\r\nexport default multicall;","import BigNumber from 'bignumber.js';\r\nimport poolsConfig from '../../config/constants/pools';\r\nimport { getAddress } from '../../utils/addressHelpers';\r\nimport erc20ABI from '../../config/abi/erc20.json';\r\nimport sousChefABI from '../../config/abi/sousChef.json';\r\nimport multicall from '../../utils/multicall';\r\n\r\n\r\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingToken.symbol !== 'BRISE')\r\nconst nonMasterPools = poolsConfig.filter((p) => p.sousId !== 0);\r\n\r\nexport const fetchPoolsAllowance = async (account) => {\r\n    const calls = nonBnbPools.map((p) => ({\r\n        address: getAddress(p.stakingToken.address),\r\n        name: 'allowance',\r\n        params: [account, getAddress(p.contractAddress)],\r\n    }))\r\n\r\n    const allowances = await multicall(erc20ABI, calls);\r\n    console.log(\"fetchPoolsAllowance allowances: \", allowances);\r\n    return nonBnbPools.reduce(\r\n        (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\r\n        {},\r\n    )\r\n}\r\n\r\n\r\nexport const fetchUserBalances = async (account) => {\r\n    // Non BNB pools\r\n    const calls = nonBnbPools.map((p) => ({\r\n        address: getAddress(p.stakingToken.address),\r\n        name: 'balanceOf',\r\n        params: [account],\r\n    }))\r\n    const tokenBalancesRaw = await multicall(erc20ABI, calls)\r\n    const tokenBalances = nonBnbPools.reduce(\r\n        (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(tokenBalancesRaw[index]).toJSON() }),\r\n        {},\r\n    )\r\n\r\n    // BNB pools\r\n    // const bnbBalance = await web3.eth.getBalance(account)\r\n    // const bnbBalances = bnbPools.reduce(\r\n    //     (acc, pool) => ({ ...acc, [pool.sousId]: new BigNumber(bnbBalance).toJSON() }),\r\n    //     {},\r\n    // )\r\n\r\n    // return { ...tokenBalances, ...bnbBalances }\r\n    return { ...tokenBalances }\r\n}\r\n\r\n\r\nexport const fetchUserStakeBalances = async (account) => {\r\n    const calls = nonMasterPools.map((p) => ({\r\n        address: getAddress(p.contractAddress),\r\n        name: 'userInfo',\r\n        params: [account],\r\n    }))\r\n    const userInfo = await multicall(sousChefABI, calls)\r\n    const stakedBalances = nonMasterPools.reduce(\r\n        (acc, pool, index) => ({\r\n        ...acc,\r\n        [pool.sousId]: new BigNumber(userInfo[index].amount._hex).toJSON(),\r\n        }),\r\n        {},\r\n    )\r\n\r\n    // BRIS / BRIS pool\r\n    // const { amount: masterPoolAmount } = await masterChefContract.methods.userInfo('0', account).call()\r\n\r\n    // return { ...stakedBalances, 0: new BigNumber(masterPoolAmount).toJSON() }\r\n    return { ...stakedBalances };\r\n}\r\n\r\nexport const fetchUserPendingRewards = async (account) => {\r\n    const calls = nonMasterPools.map((p) => ({\r\n        address: getAddress(p.contractAddress),\r\n        name: 'pendingReward',\r\n        params: [account],\r\n    }))\r\n    const res = await multicall(sousChefABI, calls)\r\n    const pendingRewards = nonMasterPools.reduce(\r\n        (acc, pool, index) => ({\r\n        ...acc,\r\n        [pool.sousId]: new BigNumber(res[index]).toJSON(),\r\n        }),\r\n        {},\r\n    )\r\n\r\n    // BRIS / BRIS pool\r\n    // const pendingReward = await masterChefContract.methods.pendingBris('0', account).call()\r\n\r\n    // return { ...pendingRewards, 0: new BigNumber(pendingReward).toJSON() }\r\n    return { ...pendingRewards };\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { connectorLocalStorageKey } from '../wallet/config';\r\nimport poolsConfig from '../../config/constants/pools';\r\nimport Pool from './Pool';\r\nimport { fetchPoolsAllowance, fetchUserBalances, fetchUserPendingRewards, fetchUserStakeBalances } from '../../state/pools/fetchPoolsUser';\r\nimport \"./styles/pools.css\";\r\n\r\n\r\nconst Pools = ({ login, onDismiss = () => null, logout }) => {\r\n\r\n    const { active, account, library, connector, activate, deactivate } = useWeb3React();\r\n    \r\n    const [userData, setUserData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const connectWalletOnPageLoad = async () => {\r\n            const connectorId = localStorage?.getItem(connectorLocalStorageKey);\r\n            if (connectorId) {\r\n                try {\r\n                login(connectorId);\r\n                // localStorage.setItem('isWalletConnected', true)\r\n                } catch (ex) {\r\n                console.log(ex)\r\n                }\r\n            }\r\n        }\r\n        connectWalletOnPageLoad();\r\n        (\r\n            async () => {\r\n                if(account !== undefined){\r\n                    try {\r\n                        const loadUserData = async() => {\r\n                            const stakingTokenBalances = await fetchUserBalances(account);\r\n                            const allowances = await fetchPoolsAllowance(account);\r\n                            const stakedBalances = await fetchUserStakeBalances(account);\r\n                            const pendingRewards = await fetchUserPendingRewards(account);\r\n                            const userData = poolsConfig.map((pool) => ({\r\n                                sousId: pool.sousId,\r\n                                allowance: allowances[pool.sousId],\r\n                                stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n                                stakedBalance: stakedBalances[pool.sousId],\r\n                                pendingReward: pendingRewards[pool.sousId],\r\n                            }));\r\n                \r\n                            setUserData(userData);\r\n                                    \r\n                        }\r\n                        await loadUserData(account);\r\n                        \r\n                    } catch (error) {\r\n                        console.log(error);\r\n                    }\r\n                }\r\n                \r\n\r\n                \r\n            }\r\n        )();\r\n    }, [account]);\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\r\n            (\r\n                async () => {\r\n                    if(account !== undefined){\r\n                        try {\r\n                            const loadUserData = async() => {\r\n                                const stakingTokenBalances = await fetchUserBalances(account);\r\n                                const allowances = await fetchPoolsAllowance(account);\r\n                                const stakedBalances = await fetchUserStakeBalances(account);\r\n                                const pendingRewards = await fetchUserPendingRewards(account);\r\n                                const userData = poolsConfig.map((pool) => ({\r\n                                    sousId: pool.sousId,\r\n                                    allowance: allowances[pool.sousId],\r\n                                    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n                                    stakedBalance: stakedBalances[pool.sousId],\r\n                                    pendingReward: pendingRewards[pool.sousId],\r\n                                }));\r\n                                console.log('userDetail userData: ', userData);\r\n                                setUserData(userData);\r\n                                        \r\n                            }\r\n                            await loadUserData(account);\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            )();\r\n        }, 15000)\r\n        \r\n        return () => clearInterval(intervalId); //This is important\r\n    \r\n    }, [])\r\n\r\n    return(\r\n        <div className='pools_container'>\r\n            <div className='pools_content'>\r\n                {\r\n                    poolsConfig.map((pool, index) => (\r\n                        <Pool\r\n                            key={index}\r\n                            pool={pool}\r\n                            userData={userData.filter(data => data.sousId === pool.sousId)}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pools;","import React from 'react';\r\nimport '../App.css';\r\nimport Pools from '../components/pools/Pools';\r\nimport useAuth from '../hooks/useAuth';\r\n\r\nconst ActivePools = () => {\r\n  const { login } = useAuth();\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"gradient__bg\">\r\n        <Pools login={login} />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ActivePools;\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers';\r\nimport { DEFAULT_GAS_LIMIT, DEFAULT_TOKEN_DECIMAL } from '../config';\r\nimport { BIG_TEN, BIG_ZERO } from './bigNumber';\r\n\r\nexport const approve = async (lpContract, masterChefContract, account) => {\r\n    return lpContract.methods\r\n        .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\r\n        .send({ from: account })\r\n}\r\n\r\nexport const sousStake = async (sousChefContract, amount, decimals = 18, account) => {\r\n    return sousChefContract.methods\r\n        .deposit(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n        .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n        .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n        })\r\n}\r\n\r\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\r\n    return sousChefContract.methods\r\n        .deposit()\r\n        .send({\r\n        from: account,\r\n        gas: DEFAULT_GAS_LIMIT,\r\n        value: new BigNumber(amount).times(DEFAULT_TOKEN_DECIMAL).toString(),\r\n        })\r\n        .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n        })\r\n}\r\n\r\nexport const sousUnstake = async (sousChefContract, amount, decimals, account) => {\r\n    return sousChefContract.methods\r\n        .withdraw(new BigNumber(amount).times(BIG_TEN.pow(decimals)).toString())\r\n        .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n        .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n        })\r\n}\r\n\r\nexport const sousEmergencyUnstake = async (sousChefContract, account) => {\r\n    return sousChefContract.methods\r\n        .emergencyWithdraw()\r\n        .send({ from: account })\r\n        .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n        })\r\n}\r\n\r\nexport const soushHarvest = async (sousChefContract, account) => {\r\n    return sousChefContract.methods\r\n        .deposit('0')\r\n        .send({ from: account, gas: DEFAULT_GAS_LIMIT })\r\n        .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n        })\r\n}\r\n  \r\n\r\nexport const soushHarvestBnb = async (sousChefContract, account) => {\r\n    return sousChefContract.methods\r\n        .deposit()\r\n        .send({ from: account, gas: DEFAULT_GAS_LIMIT, value: BIG_ZERO })\r\n        .on('transactionHash', (tx) => {\r\n        return tx.transactionHash\r\n        })\r\n}\r\n\r\n  ","import BigNumber from 'bignumber.js'\r\nimport { DEFAULT_GAS_PRICE } from '../config'\r\nimport { getDecimalAmount } from './formatBalance'\r\n\r\nexport const VERSION = 1.01\r\n\r\nexport const GAS_SETTINGS = {\r\n    default: DEFAULT_GAS_PRICE,\r\n    fast: 10,\r\n    reallyfast: 15,\r\n}\r\n\r\nexport const getGasPriceInWei = (amountInGwei) => {\r\n    return getDecimalAmount(new BigNumber(amountInGwei), 9)\r\n}\r\n\r\nexport const getDefaultSettings = () => ({\r\ngasPrice: GAS_SETTINGS.default,\r\n})\r\n\r\nexport const getStorageKey = (account) => {\r\nreturn `brisepad_settings_${account}_${VERSION}`\r\n}\r\n\r\nexport const getSettings = (account) => {\r\ntry {\r\n    const settingsFromLs = localStorage.getItem(getStorageKey(account))\r\n    return settingsFromLs ? JSON.parse(settingsFromLs) : getDefaultSettings()\r\n} catch (error) {\r\n    return getDefaultSettings()\r\n}\r\n}\r\n\r\nexport const setSettings = (account, newSettings) => {\r\n    localStorage.setItem(getStorageKey(account), JSON.stringify(newSettings))\r\n}\r\n\r\nexport const setSetting = (account, newSetting) => {\r\n    const currentSettings = getSettings(account)\r\n    setSettings(account, { ...currentSettings, ...newSetting })\r\n}\r\n","import BigNumber from 'bignumber.js'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance, decimals = 18, decimalsToAppear) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(decimalsToAppear)\r\n}\r\n\r\nexport const formatNumber = (number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n","import { default as poolsConfig, PoolCategory } from \"../config/constants/pools\"\r\n\r\nimport sousChefBnb from \"../config/abi/sousChefBnb.json\";\r\nimport sousChef from \"../config/abi/sousChef.json\";\r\nimport bep20Abi from \"../config/abi/erc20.json\";\r\nimport sousChefV2 from \"../config/abi/sousChefV2.json\";\r\nimport { getAddress } from \"./addressHelpers\";\r\nimport web3NoAccount from \"./web3\";\r\nimport { DEFAULT_GAS_PRICE, TESTNET_CHAIN_ID } from \"../config\";\r\nimport { getGasPriceInWei, getSettings } from \"./settings\";\r\n\r\n\r\nexport const getDefaultGasPrice = () => {\r\n    const chainId = process.env.REACT_APP_CHAIN_ID\r\n    if (chainId === TESTNET_CHAIN_ID) {\r\n        return 10\r\n    }\r\n    return DEFAULT_GAS_PRICE\r\n};\r\n\r\nconst getContract = (abi, address, web3, account) => {\r\n    const _web3 = web3 ?? web3NoAccount\r\n    const gasPrice = account ? getSettings(account).gasPrice : getDefaultGasPrice()\r\n\r\n    return new _web3.eth.Contract(abi, address, {\r\n        gasPrice: getGasPriceInWei(gasPrice).toString(),\r\n    })\r\n}\r\n\r\nexport const getBep20Contract = (address, web3) => {\r\n    return getContract(bep20Abi, address, web3);\r\n}\r\n  \r\n\r\nexport const getSouschefContract = (id, web3) => {\r\n    const config = poolsConfig.find((pool) => pool.sousId === id)\r\n    const abi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\r\n    return getContract(abi, getAddress(config.contractAddress), web3)\r\n}\r\n\r\nexport const getSouschefV2Contract = (id, web3) => {\r\n    const config = poolsConfig.find((pool) => pool.sousId === id)\r\n    return getContract(sousChefV2, getAddress(config.contractAddress), web3)\r\n}","import { useEffect, useState, useRef } from 'react';\r\nimport Web3 from 'web3';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { getWeb3NoAccount } from '../utils/web3';\r\n\r\n/**\r\n * Provides a web3 instance using the provider provided by useWallet\r\n * with a fallback of an httpProver\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useWeb3 = () => {\r\n  const { library } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [web3, setweb3] = useState(library ? new Web3(library) : getWeb3NoAccount())\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setweb3(library ? new Web3(library) : getWeb3NoAccount())\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return web3\r\n}\r\n\r\nexport default useWeb3\r\n","import { useMemo } from 'react';\r\nimport { getBep20Contract, getSouschefContract } from '../utils/contractHelpers';\r\nimport useWeb3 from \"./useWeb3\"\r\n\r\nexport const useSousChef = (id) => {\r\n    const web3 = useWeb3()\r\n    return useMemo(() => getSouschefContract(id, web3), [id, web3])\r\n}\r\n\r\nexport const useERC20 = (address) => {\r\n    const web3 = useWeb3()\r\n    return useMemo(() => getBep20Contract(address, web3), [address, web3])\r\n}","import React, { useState, useEffect } from 'react';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { useSousApprove } from \"../../hooks/useApprove\";\r\nimport { useERC20 } from \"../../hooks/useContract\";\r\nimport { useSousHarvest } from \"../../hooks/useHarvest\";\r\nimport { useSousStake } from \"../../hooks/useStake\";\r\nimport { useSousUnstake } from \"../../hooks/useUnstake\";\r\nimport { getAddress } from \"../../utils/addressHelpers\";\r\nimport useAuth from '../../hooks/useAuth';\r\nimport { connectorLocalStorageKey } from '../wallet/config';\r\nimport { fetchPoolsAllowance, fetchUserBalances, fetchUserPendingRewards, fetchUserStakeBalances } from '../../state/pools/fetchPoolsUser';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles/pooldetail.css';\r\nimport toast from 'react-hot-toast';\r\nimport useWindowDimensions from '../../hooks/useWindowDimensions';\r\n\r\n\r\nconst PoolDetail = ({pool}) => {\r\n    const { active, account, library, connector, activate, deactivate } = useWeb3React();\r\n    const { login } = useAuth();\r\n    const { width: windowWidth } = useWindowDimensions();    \r\n\r\n    const [stakeAmt, setStakeAmt] = useState('');\r\n    const [unstakeAmt, setUnstakeAmt] = useState('');\r\n    const [userData, setUserData] = useState({});\r\n    // const [openWalletModal, setOpenWalletModal] = useState(false);\r\n    const [approveLoading, setApproveLoading] = useState(false);\r\n    const [stakeLoading, setStakenLoading] = useState(false);\r\n    const [unstakeLoading, setUnstakenLoading] = useState(false);\r\n    const [harvestLoading, setHarvestLoading] = useState(false);\r\n    const [userdataLoading, setUserdataLoading] = useState(false);\r\n\r\n    \r\n    // Approve\r\n    const { sousId, stakingToken, earningToken } = pool;\r\n    const stakingTokenContract = useERC20(stakingToken.address ? getAddress(stakingToken.address) : '');\r\n    const { handleApprove, requestedApproval } = useSousApprove(stakingTokenContract, sousId, earningToken.symbol);\r\n    const handleTokenApproval = async() => {\r\n        try {\r\n            setApproveLoading(true);\r\n            await handleApprove();\r\n            setApproveLoading(false);\r\n        } catch (error) {\r\n            setApproveLoading(false);\r\n            (() => toast.error(\"Not approved\"))();\r\n        }\r\n    }\r\n    \r\n    // Stake\r\n    const { onStake } = useSousStake(sousId, false);\r\n    const handleStake = async() => {\r\n        try {\r\n            \r\n            if(Number(stakeAmt) === 0){\r\n                return;\r\n            }\r\n            setStakenLoading(true);\r\n            await onStake(stakeAmt.toString(), stakingToken.decimals);\r\n            setStakenLoading(false);\r\n            (() => toast.success(\"Stake successful\"))();\r\n        } catch (error) {\r\n            setStakenLoading(false);\r\n            (() => toast.error(\"Not staked\"))();\r\n        }\r\n    }\r\n\r\n    // Harvest\r\n    const { onReward } = useSousHarvest(sousId, false);\r\n    const handleHarvest = async() => {\r\n        try {\r\n            setHarvestLoading(true);\r\n            await onReward();\r\n            setHarvestLoading(false);\r\n            (() => toast.success(\"Harvest successful\"))();\r\n        } catch (error) {\r\n            setHarvestLoading(false);\r\n            (() => toast.error(\"Not harvested\"))();\r\n        }\r\n    }\r\n\r\n    // Unstake/withdraw\r\n    const { onUnstake } = useSousUnstake(sousId);\r\n    const handleUnstake = async() => {\r\n        try {\r\n            \r\n            if(Number(unstakeAmt) === 0){\r\n                return;\r\n            }\r\n            setUnstakenLoading(true);\r\n            if(Number(unstakeAmt) > Number(userData.stakedBalance)){\r\n                await onUnstake(userData.stakedBalance, stakingToken.decimals)\r\n            }else{\r\n                await onUnstake(unstakeAmt, stakingToken.decimals)\r\n            }\r\n            setUnstakenLoading(false);\r\n            (() => toast.success(\"Withdrawal successful\"))();\r\n        } catch (error) {\r\n            setUnstakenLoading(false);\r\n            (() => toast.error(\"Not withdrawn\"))();\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    const handleStakeAmtInput = (e) => {\r\n        if(!isNaN(e.target.value) || e.target.value === '.'){\r\n            setStakeAmt(e.target.value);\r\n        }\r\n    }\r\n\r\n    const handleUnstakeAmtInput = (e) => {\r\n        if(!isNaN(e.target.value) || e.target.value === '.'){\r\n            setUnstakeAmt(e.target.value);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const connectWalletOnPageLoad = async () => {\r\n            const connectorId = localStorage?.getItem(connectorLocalStorageKey);\r\n            if (connectorId) {\r\n                try {\r\n                login(connectorId);\r\n                // localStorage.setItem('isWalletConnected', true)\r\n                } catch (ex) {\r\n                console.log(ex)\r\n                }\r\n            }\r\n        }\r\n        connectWalletOnPageLoad();\r\n        (\r\n            async () => {\r\n                if(account !== undefined){\r\n                    try {\r\n                        setUserdataLoading(true);\r\n                        const loadUserData = async() => {\r\n                            const stakingTokenBalances = await fetchUserBalances(account);\r\n                            const allowances = await fetchPoolsAllowance(account);\r\n                            const stakedBalances = await fetchUserStakeBalances(account);\r\n                            const pendingRewards = await fetchUserPendingRewards(account);\r\n                            const userData = ({\r\n                                sousId: pool.sousId,\r\n                                allowance: allowances[pool.sousId],\r\n                                stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n                                stakedBalance: stakedBalances[pool.sousId],\r\n                                pendingReward: pendingRewards[pool.sousId],\r\n                            });\r\n                            console.log('userDetail userData: ', userData);\r\n                            setUserdataLoading(false);\r\n                            setUserData(userData);\r\n                                    \r\n                        }\r\n                        await loadUserData(account);\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        setUserdataLoading(false);\r\n                    }\r\n                }\r\n                \r\n            }\r\n        )();\r\n    }, [account]);\r\n\r\n    useEffect(() => {\r\n        const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\r\n            (\r\n                async () => {\r\n                    if(account !== undefined){\r\n                        try {\r\n                            const loadUserData = async() => {\r\n                                const stakingTokenBalances = await fetchUserBalances(account);\r\n                                const allowances = await fetchPoolsAllowance(account);\r\n                                const stakedBalances = await fetchUserStakeBalances(account);\r\n                                const pendingRewards = await fetchUserPendingRewards(account);\r\n                                const userData = ({\r\n                                    sousId: pool.sousId,\r\n                                    allowance: allowances[pool.sousId],\r\n                                    stakingTokenBalance: stakingTokenBalances[pool.sousId],\r\n                                    stakedBalance: stakedBalances[pool.sousId],\r\n                                    pendingReward: pendingRewards[pool.sousId],\r\n                                });\r\n                                console.log('userDetail userData: ', userData);\r\n                                setUserData(userData);\r\n                                        \r\n                            }\r\n                            await loadUserData(account);\r\n                        } catch (error) {\r\n                            console.log(error);\r\n                        }\r\n                    }\r\n                    \r\n                }\r\n            )();\r\n        }, 15000)\r\n        \r\n        return () => clearInterval(intervalId); //This is important\r\n    \r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"pooldetail_container\">\r\n            {\r\n                windowWidth < 1050 &&\r\n                <Link className=\"go_back\" to=\"/activepools\">Goto pools</Link>\r\n            }\r\n            <div className=\"pooldetail_content\">\r\n            </div>\r\n            <p>Stake {pool.stakingToken.symbol}</p>\r\n            <p>Earn {pool.earningToken.symbol}</p>\r\n\r\n            {\r\n                active \r\n                ?\r\n                (\r\n                    <>\r\n                    {\r\n                        // isEmpty(userData)\r\n                        userdataLoading\r\n                        ?\r\n                        <p className='dataloading'>Loading data...</p>\r\n                        :\r\n                        (\r\n                            \r\n                            <>\r\n                                <div className='userdata'>\r\n                                    {/* <p className='amt_staked'>Amount Staked {`${userData.stakedBalance}`} {`${pool.stakingToken.symbol`} </p> */}\r\n                                    <p>Amount Staked: {userData.stakedBalance !== undefined ? userData.stakedBalance: 0} {pool.stakingToken.symbol}</p>\r\n                                    {/* <p className='amt_earned'>Earned {`${userData.pendingReward} ${pool.earningToken.symbol}`} </p> */}\r\n                                    <p className='amt_earned'>Earned: {userData.pendingReward !== undefined ? userData.pendingReward : 0} {pool.earningToken.symbol} </p>\r\n                                </div>\r\n                                {\r\n                                    Number(userData.pendingReward) > 0 \r\n                                    &&\r\n                                    <div className=\"actioncard\">\r\n                                        <button disabled={harvestLoading} className='harvest_btn' onClick={handleHarvest}>{harvestLoading ? \"Loading...\" : \"Harvest\"}</button>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    Number(userData.allowance) > 0\r\n                                    ?\r\n                                    <div className='stake_pad'>\r\n                                        <input value={stakeAmt} onChange={handleStakeAmtInput}/>\r\n                                        <button disabled={stakeLoading} className='stake_btn' onClick={handleStake}>{stakeLoading ? \"Loading...\" : \"Stake\"}</button>\r\n                                    </div>\r\n                                    :\r\n                                    <button disabled={requestedApproval} className='approve_btn' onClick={handleTokenApproval}>{approveLoading ? \"Loading...\": \"Approve pool\"}</button>\r\n                                }\r\n\r\n                                {\r\n                                    Number(userData.stakedBalance) > 0\r\n                                    &&\r\n                                    <div className='withdraw_pad'>\r\n                                        <input value={unstakeAmt} onChange={handleUnstakeAmtInput}/>\r\n                                        <button disabled={unstakeLoading} className='withdraw_btn' onClick={handleUnstake}>{unstakeLoading ? \"Loading...\" : \"Withdraw\"}</button>\r\n                                    </div>\r\n\r\n                                }\r\n                            </>\r\n                        )\r\n\r\n                        \r\n                    }\r\n                    </>\r\n                )\r\n                :\r\n                <p className='connect_text'>Connect your wallet</p>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PoolDetail;","import { useWeb3React } from '@web3-react/core';\r\nimport { useCallback, useState } from 'react';\r\nimport toast from 'react-hot-toast';\r\nimport { approve } from '../utils/callHelpers';\r\nimport { useSousChef } from './useContract';\r\n\r\n// Approve a Pool\r\n// lpContract = staking token\r\nexport const useSousApprove = (lpContract, sousId, earningTokenSymbol) => {\r\n    const [requestedApproval, setRequestedApproval] = useState(false)\r\n    // const { toastSuccess, toastError } = useToast()\r\n    // const { t } = useTranslation()\r\n    // const dispatch = useAppDispatch()\r\n    const { account } = useWeb3React()\r\n    const sousChefContract = useSousChef(sousId)\r\n\r\n    const handleApprove = useCallback(async () => {\r\n        try {\r\n        setRequestedApproval(true)\r\n        const tx = await approve(lpContract, sousChefContract, account)\r\n        // dispatch(updateUserAllowance(sousId, account))\r\n        if (tx) {\r\n            // toastSuccess(\r\n            // t('Contract Enabled'),\r\n            // t('You can now stake in the %symbol% pool!', { symbol: earningTokenSymbol }),\r\n            // )\r\n            (() => toast.success(\"Approval successful\"))();\r\n\r\n            setRequestedApproval(false);\r\n        } else {\r\n            // user rejected tx or didn't go thru\r\n            // toastError(t('Error'), t('Please try again. Confirm the transaction and make sure you are paying enough gas!'))\r\n            (() => toast.error(\"Please try again. Confirm the transaction and make sure you are paying enough gas!\"))();\r\n            \r\n            setRequestedApproval(false);\r\n        }\r\n        } catch (e) {\r\n        console.error(e)\r\n        // toastError(t('Error'), e?.message)\r\n        (() => toast.error(e.message))();\r\n        \r\n        }\r\n    }, [account, lpContract, sousChefContract, sousId, earningTokenSymbol])\r\n    // [account, dispatch, lpContract, sousChefContract, sousId, earningTokenSymbol, t, toastError, toastSuccess]\r\n\r\n    return { handleApprove, requestedApproval }\r\n}\r\n  ","import { useCallback } from 'react';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSousChef } from \"./useContract\";\r\nimport { sousStake, sousStakeBnb } from '../utils/callHelpers';\r\n\r\nexport const useSousStake = (sousId, isUsingBnb = false) => {\r\n    // const dispatch = useAppDispatch();\r\n    const { account } = useWeb3React();\r\n    // const masterChefContract = useMasterchef();\r\n    const sousChefContract = useSousChef(sousId);\r\n\r\n    const handleStake = useCallback(\r\n        async (amount, decimals) => {\r\n        // if (sousId === 0) {\r\n        //     await stake(masterChefContract, 0, amount, account)\r\n        // } else \r\n        if (isUsingBnb) {\r\n            await sousStakeBnb(sousChefContract, amount, account)\r\n        } else {\r\n            await sousStake(sousChefContract, amount, decimals, account)\r\n        }\r\n        // dispatch(updateUserStakedBalance(sousId, account));\r\n        // dispatch(updateUserBalance(sousId, account));\r\n        },\r\n        [account, isUsingBnb, sousChefContract, sousId],\r\n        // [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\r\n    )\r\n\r\n    return { onStake: handleStake }\r\n}\r\n  ","import { useCallback } from 'react';\r\nimport { useWeb3React } from '@web3-react/core';\r\nimport { useSousChef } from './useContract';\r\nimport { soushHarvest, soushHarvestBnb } from '../utils/callHelpers';\r\n\r\n\r\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\r\n    // const dispatch = useAppDispatch();\r\n    const { account } = useWeb3React();\r\n    const sousChefContract = useSousChef(sousId);\r\n    // const masterChefContract = useMasterchef();\r\n\r\n    const handleHarvest = useCallback(async () => {\r\n        // if (sousId === 0) {\r\n        // await harvest(masterChefContract, 0, account)\r\n        // } else \r\n        if (isUsingBnb) {\r\n        await soushHarvestBnb(sousChefContract, account);\r\n        } else {\r\n        await soushHarvest(sousChefContract, account);\r\n        }\r\n        // dispatch(updateUserPendingReward(sousId, account));\r\n        // dispatch(updateUserBalance(sousId, account));\r\n    }, [account, isUsingBnb, sousChefContract, sousId])\r\n    // [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId]\r\n\r\n    return { onReward: handleHarvest }\r\n}\r\n  ","import { useCallback } from 'react';\r\nimport { useWeb3React } from \"@web3-react/core\";\r\nimport { useSousChef } from \"./useContract\";\r\nimport { sousEmergencyUnstake, sousUnstake } from '../utils/callHelpers';\r\n\r\nexport const useSousUnstake = (sousId, enableEmergencyWithdraw = false) => {\r\n    // const dispatch = useAppDispatch();\r\n    const { account } = useWeb3React();\r\n    // const masterChefContract = useMasterchef();\r\n    const sousChefContract = useSousChef(sousId)\r\n\r\n    const handleUnstake = useCallback(\r\n        async (amount, decimals) => {\r\n        // if (sousId === 0) {\r\n        //     const txHash = await unstake(masterChefContract, 0, amount, account)\r\n        //     console.info(txHash)\r\n        // } else\r\n        if (enableEmergencyWithdraw) {\r\n            const txHash = await sousEmergencyUnstake(sousChefContract, account)\r\n            console.info(txHash)\r\n        } else {\r\n            const txHash = await sousUnstake(sousChefContract, amount, decimals, account)\r\n            console.info(txHash)\r\n        }\r\n        // dispatch(updateUserStakedBalance(sousId, account));\r\n        // dispatch(updateUserBalance(sousId, account));\r\n        // dispatch(updateUserPendingReward(sousId, account));\r\n        },\r\n        [account, enableEmergencyWithdraw, sousChefContract, sousId],\r\n        // [account, dispatch, enableEmergencyWithdraw, masterChefContract, sousChefContract, sousId],\r\n    )\r\n\r\n    return { onUnstake: handleUnstake }\r\n}","import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport '../App.css';\r\nimport PoolDetail from '../components/pools/PoolDetail';\r\nimport pools from '../config/constants/pools';\r\n\r\nconst ShowPool = () => {\r\n\r\n    const { sousId } = useParams();\r\n    \r\n    const resPools = pools.filter(pool => (pool.sousId === Number(sousId)));\r\n    \r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"gradient__bg\">\r\n            <PoolDetail pool={resPools[0]} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShowPool;\r\n","import React, {useState} from 'react';\r\n\r\nimport { Footer, Blog, Possibility, Features, WhatGPT3, Header } from './containers';\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport { CTA, Brand, Navbar } from './components';\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\nimport './App.css';\r\n\r\n//pages\r\nimport Home from './Pages/Home';\r\nimport ActivePools from './Pages/ActivePools';\r\nimport ShowPool from './Pages/ShowPool';\r\n\r\nconst App = () => {\r\n\r\n\r\n  const tOptions = {\r\n    error: {\r\n      style: {\r\n        background: '#ff1a1a',\r\n        color: '#ffffff',\r\n        paddingRight: '30px',\r\n        paddingLeft: '30px',\r\n        fontWeight: '500',\r\n        fontSize: '18px'\r\n      }\r\n    },\r\n    success: {\r\n      style: {\r\n        background: '#059862',\r\n        color: '#ffffff',\r\n        paddingRight: '30px',\r\n        paddingLeft: '30px',\r\n        fontWeight: '500',\r\n        fontSize: '18px'\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <BrowserRouter>\r\n        <div className=\"gradient__bg\">\r\n          <Navbar  />\r\n        </div>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/activepools\" element={<ActivePools />} />\r\n          <Route path=\"/pool/:sousId\" element={<ShowPool />} />\r\n        </Routes>\r\n        <Footer />\r\n        <Toaster toastOptions={tOptions} />\r\n      </BrowserRouter>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default React.memo(App)\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Web3ReactProvider } from '@web3-react/core'\r\nimport App from './App';\r\nimport './index.css';\r\nimport { getLibrary } from './utils/web3React';\r\n// import MetamaskProvider from './components/metamaskprovider/MetaMaskProvider';\r\n\r\n\r\nReactDOM.render(\r\n    <Web3ReactProvider getLibrary={getLibrary}>\r\n        {/* <MetamaskProvider>\r\n            <App />\r\n        </MetamaskProvider> */}\r\n        <App />\r\n\r\n    </Web3ReactProvider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}